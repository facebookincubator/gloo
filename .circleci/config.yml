version: 2.1

jobs:
  build:
    parameters:
      docker_image:
        type: string
        default: ""
      apt_get:
        type: string
        default: ""
      cmake_compiler:
        type: string
        default: ""
      cmake_args:
        type: string
        default: ""
    docker:
      - image: << parameters.docker_image >>
    steps:
      - checkout
      - run:
          name: Install apt packages
          command: |
            apt-get update
            apt-get install -y build-essential cmake libibverbs-dev << parameters.apt_get >>
      - run:
          name: Install libuv
          command: |
            apt-get install -y wget pkg-config
            wget \
              -q \
              -O libuv-v1.26.0.tar.gz \
              https://dist.libuv.org/dist/v1.26.0/libuv-v1.26.0.tar.gz
            tar xf libuv-v1.26.0.tar.gz
            cd libuv-v1.26.0
            mkdir -p build
            cd build
            cmake ../ \
              -DCMAKE_INSTALL_PREFIX=/usr/local \
              << parameters.cmake_compiler >>
            make install
      - run:
          name: Install googletest
          command: |
            wget \
              -q \
              -O googletest-release-1.10.0.tar.gz \
              https://github.com/google/googletest/archive/release-1.10.0.tar.gz
            tar xf googletest-release-1.10.0.tar.gz
            cd googletest-release-1.10.0
            mkdir -p build
            cd build
            cmake ../ \
              -DCMAKE_INSTALL_PREFIX=/usr/local \
              << parameters.cmake_compiler >>
            make install
      - run:
          name: Build
          command: |
            mkdir build
            cd build
            cmake ../ \
              -DCMAKE_VERBOSE_MAKEFILE=ON \
              -DUSE_IBVERBS=ON \
              -DUSE_LIBUV=ON \
              -DBUILD_TEST=ON \
              << parameters.cmake_compiler >> \
              << parameters.cmake_args >>
            make
      - run:
          name: Test
          command: |
            # Exclude large broadcast test because it OOMs on CircleCI.
            # Exclude multi-process transport tests because
            # they appear to have some crashing problem...
            build/gloo/test/gloo_test \
              --gtest_filter="-LargeBroadcast/BroadcastTest*:Transport/TransportMultiProcTest*"

workflows:
  build:
    jobs:
      - build:
          name: gcc5
          docker_image: ubuntu:18.04
          apt_get: "gcc-5 g++-5"
          cmake_compiler: -DCMAKE_C_COMPILER=gcc-5 -DCMAKE_CXX_COMPILER=g++-5
      - build:
          name: gcc7
          docker_image: ubuntu:18.04
          apt_get: "gcc-7 g++-7"
          cmake_compiler: -DCMAKE_C_COMPILER=gcc-7 -DCMAKE_CXX_COMPILER=g++-7
      - build:
          name: clang6
          docker_image: ubuntu:18.04
          apt_get: "clang-6.0"
          cmake_compiler: -DCMAKE_C_COMPILER=clang-6.0 -DCMAKE_CXX_COMPILER=clang++-6.0
      - build:
          name: cuda9.2
          docker_image: nvidia/cuda:9.2-devel-ubuntu18.04
          cmake_args: -DUSE_CUDA=ON
      - build:
          name: cuda10.1
          docker_image: nvidia/cuda:10.1-devel-ubuntu18.04
          cmake_args: -DUSE_CUDA=ON
